DROP TABLE IF EXISTS STUDENT;
DROP TABLE IF EXISTS SEMESTER;
DROP TABLE IF EXISTS CLASS;
DROP TABLE IF EXISTS ENROLLMENT;

CREATE TABLE STUDENT ( id INT AUTO_INCREMENT PRIMARY KEY, STUDENT_ID VARCHAR(250) NOT NULL, FIRST_NAME VARCHAR(250) NOT NULL,
 LAST_NAME VARCHAR(250) NOT NULL,
 CREATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_BY VARCHAR(250) NOT NULL);
 
CREATE TABLE SEMESTER ( id INT AUTO_INCREMENT PRIMARY KEY, SEM_ID VARCHAR(250) NOT NULL, SEM_NAME VARCHAR(250) NOT NULL,
 CREATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_BY VARCHAR(250) NOT NULL);

CREATE TABLE CLASS ( id INT AUTO_INCREMENT PRIMARY KEY, CLASS_ID VARCHAR(250) NOT NULL, CLASS_NAME VARCHAR(250) NOT NULL,
 CREDITS INT NOT NULL,
 CREATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_BY VARCHAR(250) NOT NULL);

CREATE TABLE ENROLLMENT ( id INT AUTO_INCREMENT PRIMARY KEY, CLASS_ID VARCHAR(250) NOT NULL, STUDENT_ID VARCHAR(250) NOT NULL,
 SEM_ID VARCHAR(250) NOT NULL,
 CREATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_DATE TIMESTAMP NOT NULL,
 LAST_UPDATED_BY VARCHAR(250) NOT NULL);

ALTER TABLE STUDENT ADD CONSTRAINT UQ_STUDENT_ID UNIQUE(STUDENT_ID);
ALTER TABLE SEMESTER ADD CONSTRAINT UQ_SEM_ID UNIQUE(SEM_ID);
ALTER TABLE CLASS ADD CONSTRAINT UQ_CLASS_ID UNIQUE(CLASS_ID);
ALTER TABLE ENROLLMENT ADD CONSTRAINT fk_student_id FOREIGN KEY (student_id) REFERENCES student(student_id);
ALTER TABLE ENROLLMENT ADD CONSTRAINT fk_sem_id FOREIGN KEY (sem_id) REFERENCES SEMESTER(sem_id);
ALTER TABLE ENROLLMENT ADD CONSTRAINT fk_class_id FOREIGN KEY (class_id) REFERENCES CLASS(class_id);